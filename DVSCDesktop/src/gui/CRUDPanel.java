package gui;

import org.jdatepicker.impl.JDatePickerImpl;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class CRUDPanel extends JPanel {
    private JPanel pnl_CRUDPanel;
    private JPanel pnl_garageList;
    private JLabel lbl_garageList;
    private JScrollPane scrl_garageList;
    private JList lst_garages;
    private JButton btn_addGarage;
    private JPanel pnl_garageInfo;
    private JLabel lbl_garageInfo;
    private JLabel lbl_garageName;
    private JTextField txt_garageName;
    private JLabel lbl_garageEmail;
    private JTextField txt_garageEmail;
    private JLabel lbl_contactNum;
    private JTextField textField1;
    private JLabel lbl_yearPaid;
    private JCheckBox checkBox1;
    private JButton btn_deleteGarage;
    private JPanel pnl_instrumentList;
    private JLabel lbl_instrumentList;
    private JScrollPane scrl_instrumentList;
    private JList lst_instruments;
    private JButton addInstrumentButton;
    private JPanel pnl_instrumentInfo;
    private JLabel lbl_instumentInfo;
    private JLabel lbl_serialNum;
    private JLabel lbl_calibrationDate;
    private JTextField txt_serialNum;
    private JDatePickerImpl JDatePickerImpl1;
    private JButton btn_deleteInstrument;

    public static final String tabName = "garages";

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        pnl_CRUDPanel = new JPanel();
        pnl_CRUDPanel.setLayout(new GridBagLayout());
        pnl_CRUDPanel.setMaximumSize(new Dimension(-1, -1));
        pnl_CRUDPanel.setMinimumSize(new Dimension(-1, -1));
        pnl_CRUDPanel.setPreferredSize(new Dimension(-1, -1));
        pnl_garageList = new JPanel();
        pnl_garageList.setLayout(new GridBagLayout());
        pnl_garageList.setMaximumSize(new Dimension(-1, -1));
        pnl_garageList.setMinimumSize(new Dimension(-1, -1));
        pnl_garageList.setPreferredSize(new Dimension(-1, -1));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        pnl_CRUDPanel.add(pnl_garageList, gbc);
        lbl_garageList = new JLabel();
        Font lbl_garageListFont = this.$$$getFont$$$(null, Font.BOLD, 14, lbl_garageList.getFont());
        if (lbl_garageListFont != null) lbl_garageList.setFont(lbl_garageListFont);
        lbl_garageList.setHorizontalAlignment(0);
        lbl_garageList.setHorizontalTextPosition(0);
        lbl_garageList.setText("Garages");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        pnl_garageList.add(lbl_garageList, gbc);
        scrl_garageList = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        pnl_garageList.add(scrl_garageList, gbc);
        lst_garages = new JList();
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        defaultListModel1.addElement("Garage");
        lst_garages.setModel(defaultListModel1);
        scrl_garageList.setViewportView(lst_garages);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pnl_CRUDPanel;
    }

}
